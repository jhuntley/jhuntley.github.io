<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on jhuntley.github.io</title>
    <link>https://jhuntley.github.io/posts/</link>
    <description>Recent content in Posts on jhuntley.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Feb 2024 13:43:40 +0000</lastBuildDate>
    <atom:link href="https://jhuntley.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Netcode for Entities - Spawning Player Cameras</title>
      <link>https://jhuntley.github.io/posts/unity_netcode_camera/</link>
      <pubDate>Sun, 11 Feb 2024 13:43:40 +0000</pubDate>
      <guid>https://jhuntley.github.io/posts/unity_netcode_camera/</guid>
      <description>Introduction I originally wrote this post with the idea that it would provide a short tutorial on camera creation within the Unity Netcode for Entities (ECS) framework. Ideas, of course, are just that &amp;ndash; ideas &amp;ndash; and creating the cameras and getting them working turned out to be both a far larger (and in the end, far simpler) problem than I initially imagined. Part of the problem was that I was trying to wrap my head around both a new conceptual territory (network programming) and a new framework (Netcode for Entities), which made it difficult to pick out core concepts and to scaffold my learning in a way that felt scalable and structured.</description>
    </item>
    <item>
      <title>Game of Life - Rust &#43; WebAssembly</title>
      <link>https://jhuntley.github.io/posts/game_of_life/</link>
      <pubDate>Thu, 08 Feb 2024 13:43:40 +0000</pubDate>
      <guid>https://jhuntley.github.io/posts/game_of_life/</guid>
      <description>Making Game of Life with Rust and WebAssembly Thanks to a fantastic tutorial and the help of a friend I was able dive into creating Conway&amp;rsquo;s Game of Life for the first time. I&amp;rsquo;m just beginning my journey into Rust and I think this was a great first project to see the language in action while also learning about WebAssembly.&#xA;The most challenging part of the implementation was getting the WebAssembly to load within the Hugo framework.</description>
    </item>
    <item>
      <title>A Simple Circle</title>
      <link>https://jhuntley.github.io/posts/a_simple_cirle/a_simple_circle/</link>
      <pubDate>Tue, 06 Feb 2024 13:43:40 +0000</pubDate>
      <guid>https://jhuntley.github.io/posts/a_simple_cirle/a_simple_circle/</guid>
      <description>Your First Bevy Circle After one mangled attempt to do something far more grand, I&amp;rsquo;ve decided to pare things down and go after some easy prey: drawing a circle. Audience gasps. Do I dare attempt such a feat? Yes, yes I do &amp;ndash; and I&amp;rsquo;m going to make it even easier: I&amp;rsquo;m going to use of some of the sample code contained on the Bevy website.&#xA;Really, a better name for this post would&amp;rsquo;ve been &amp;lsquo;Starting Your First Bevy Project&amp;rsquo; or something like that, but we&amp;rsquo;ve already come this far so lets keep the ball rolling.</description>
    </item>
    <item>
      <title>Current Projects</title>
      <link>https://jhuntley.github.io/posts/first_post/</link>
      <pubDate>Tue, 06 Feb 2024 13:43:40 +0000</pubDate>
      <guid>https://jhuntley.github.io/posts/first_post/</guid>
      <description>Current Projects Since this is the first post on this blog, I figured it might be a good idea to outline the current projects that I&amp;rsquo;m working on.&#xA;Unnanounced Unity ECS project I&amp;rsquo;m co-developing this project with my brother and it aims to fuse together card-playing and dungeon-crawling mechanics to create a unique player experience. We&amp;rsquo;re developing it on the Unity platform and making use of their new-ish Entiy Component System (ECS) for all-around performance improvements and a novel coding experience.</description>
    </item>
  </channel>
</rss>
